/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   m2_header.h
 * Author: liuyixu6
 *
 * Created on February 23, 2018, 4:41 PM
 */

#ifndef M2_HEADER_H
#define M2_HEADER_H


#include <iostream>
#include <chrono>
#include <thread>
#include <cstdlib>

#include <string>
#include <math.h>

#include <vector>
#include <algorithm>
#include <unordered_map>
#include <set>
#include <map>

#include "m2.h"
#include "m1.h"
#include "graphics.h"
#include "dataStructure.h"
#include "StreetsDatabaseAPI.h"
#include "OSMDatabaseAPI.h"

bool mouse_move = false; 
float x_coordinate, y_coordinate;
bool if_draw_intersection = false;
double avg_lat = 0;
bool thumbnail_draw = false;
Surface marker = load_png_from_file("libstreetmap/resources/map-perspective-with-a-placeholder-on-it.png");
t_bound_box first_world;

// global data structure
extern dataStructure data_structure;


void drawscreen(void);
void search_button(void (*drawscreen_ptr) (void));
void act_on_button_press(float x, float y, t_event_buttonPressed event);
void act_on_mouse_move(float x, float y);
void act_on_key_press(char c, int keysym);
void delay(long milliseconds);

void act_on_mousebutton(float x, float y, t_event_buttonPressed button_info);
unsigned close_inter (double lon, double lat);

int street_seg_linewidth(float speedlimit);
void draw_street_and_name();
void draw_feature();

void draw_osm();
void draw_osm_subway_and_station(const OSMWay* w, color_types color);
void draw_subway_line(LatLon& point1, LatLon& point2, color_types color);

void draw_osm_highway(const OSMWay* w);
void draw_highway_line(LatLon& point1, LatLon& point2);

void draw_point(LatLon& point, Surface& icon, std::string name);
void draw_tourism_point(LatLon& point);

void thumbnail();

void subway_button(void (*drawscreen_ptr) (void));
void searchbar_button(void (*drawscreen_ptr) (void));

void input_calculation();

#endif /* M2_HEADER_H */

